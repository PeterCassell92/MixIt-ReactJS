{
	"info": {
		"_postman_id": "0f880edc-5c69-4a31-ab83-8638f346591a",
		"name": "TaskTracker",
		"description": "Testing a simple TaskTracker API made in Verj, designed as a backend to a ReactJS Front End",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "getAllTasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Task Array Received in Body\", function(){\r",
							"    var jsondata= pm.response.json();\r",
							"    pm.expect(jsondata.data).to.have.property('tasks');\r",
							"    pm.expect(jsondata.data.tasks).to.be.instanceOf(Array);\r",
							"    var tasks = jsondata.data.tasks;\r",
							"\r",
							"    if(tasks && tasks.length > 0){\r",
							"        var task_ids = tasks.map((t) => t.id);\r",
							"        pm.environment.set(\"task_ids\" ,task_ids);\r",
							"        pm.environment.set(\"task_id\", task_ids[_.random(task_ids.length)]);\r",
							"    }\r",
							"})\r",
							"\r",
							"postman.setNextRequest('Add Task');\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/task_tracker/v1/tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task_tracker",
						"v1",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Task",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var task_ids = pm.environment.get(\"task_ids\");\r",
							"\r",
							"if(task_ids && task_ids.length > 0){\r",
							"    pm.environment.set(\"task_id\", task_ids[_.random(task_ids.length -1)]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"postman.setNextRequest('Toggle Reminder');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/task_tracker/v1/tasks/{{task_id}}/get",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task_tracker",
						"v1",
						"tasks",
						"{{task_id}}",
						"get"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Task",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function generateTimes(start, end, suffix){\r",
							"    var arr=[];\r",
							"    for (let i =start; i<= end; i++){\r",
							"        arr.push(String(i)+suffix);\r",
							"    }\r",
							"    return arr;\r",
							"}\r",
							"var times = generateTimes(9,12, \"am\").concat(generateTimes(1,8,\"pm\"));\r",
							"pm.environment.set(\"time\", times[_.random(times.length-1)]);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
							"});\r",
							"\r",
							"var jsondata= pm.response.json();\r",
							"pm.test(\"id for the Newly Created Task was Returned\", function(){\r",
							"    pm.expect(jsondata.data).to.have.property('id');\r",
							"\r",
							"    var newly_created_id = jsondata.data.id;\r",
							"    pm.expect(newly_created_id).to.be.a(\"number\");\r",
							"\r",
							"    var task_ids = pm.environment.get(\"task_ids\");\r",
							"    var new_task_ids = task_ids.concat(newly_created_id);\r",
							"   \r",
							"    pm.environment.set(\"task_ids\", new_task_ids);\r",
							"})\r",
							"\r",
							"postman.setNextRequest('Get Task');\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"{{$randomVerb}} {{$randomNoun}}\",\r\n    \"day\": \"{{$randomWeekday}} {{time}}\",\r\n    \"reminder\": true\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/task_tracker/v1/tasks/add",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task_tracker",
						"v1",
						"tasks",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Toggle Reminder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
							"});\r",
							"\r",
							"postman.setNextRequest('Delete Task');\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var task_ids = pm.environment.get(\"task_ids\")\r",
							"if(task_ids && task_ids.length > 0){\r",
							"    pm.environment.set(\"task_id\", task_ids[_.random(task_ids.length -1)]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/task_tracker/v1/tasks/{{task_id}}/togglereminder",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task_tracker",
						"v1",
						"tasks",
						"{{task_id}}",
						"togglereminder"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Task",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var task_ids = pm.environment.get(\"task_ids\")\r",
							"if(task_ids && task_ids.length > 0){\r",
							"    pm.environment.set(\"task_id\", task_ids[_.random(task_ids.length -1)]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/task_tracker/v1/tasks/{{task_id}}/delete",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task_tracker",
						"v1",
						"tasks",
						"{{task_id}}",
						"delete"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}