<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ebase version="5.10.0">
    <script contentType="Javascript" preferredComponentPath="/StatelessServices/task_tracker" id="sharedFunctions" dateCreated="2021-10-19T16:57:58.778+01:00">
        <scriptText>importPackage(com.ebasetech.xi.api);
importPackage(com.ebasetech.xi.services);

//Custom Errors
const ERR_404_INVALID_DATA_TYPE = new TypeError("404: Data does not meet required type.");
const ERR_405_INVALID_HTTP_TYPE = new Error("405:No HTTP Method specified or invalid HTTP Method used");
const ERR_400_BAD_REQ_NO_BODY= new Error("400:Bad Request - No Request Body provided.");

//Intended for checks which are common across multiple endpoint events. I.e. checking Basic Authentication credentials. Checking method is allowed etc
/**@desc compares the submitted basic authentication credentials (decrypted) for exact match with the username and password as set in the properties file
 * @param credentials = basicAuthentication credentials object
 */
function checkBasicAuthentication(credentials){

	if(!credentials){
		throw new Error("401:Credentials not Provided");
	}

	if(credentials.getUsername() == getProperty('basicAuthUsername') &amp;&amp; credentials.getPassword()== getProperty('basicAuthPassword')){
		return true;
	}
	else{
		throw new Error("401:Invalid Credentials");
	}
}

/**@desc standardised way of setting an error response from an error object
 * @param error Error Object - with error.message in the format "errorcode:errormessage"
 */
function setErrorResponse(error){
	log("error object:");
	log(JSON.stringify(error, null, 3));
	var arr = error.message.split(':');

	//the message has been formatted correctly
	if(arr.length == 2 &amp;&amp; arr[0].match(/^\d*/) &amp;&amp;  typeof Number(arr[0]) == "number" ){
		 form.rest.setResponseStatus(arr[0]);
  	form.rest.setResponseBody(JSON.stringify({
    	msg: arr[1]
 		}));
	
 		//form.rest.setResponseHeader("WWW-Authenticate", "Basic");
	}
	//otherwise this is going to be an uncaught (server) error.
	else{
		log(error.message);
		form.rest.setResponseStatus(500);

		form.rest.setResponseBody(JSON.stringify({
    	msg: error.message
 		}));
	}
}</scriptText>
    </script>
</ebase>
